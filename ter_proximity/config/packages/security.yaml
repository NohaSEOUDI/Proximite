security:
    encoders:
        App\Entity\User:
            algorithm: auto
        App\Entity\Fournisseur:
            algorithm: auto



    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
 
    providers:
        client_user_provider:
            entity:
                class: App\Entity\User
                property: email

        fournisseur_user_provider:
            entity:
                class: App\Entity\Fournisseur
                property: email

        all_users:
            chain:
                providers: ['client_user_provider', 'fournisseur_user_provider']
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            lazy: true
            provider: all_users
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
                    - App\Security\FournisseurAuthenticator
                entry_point: App\Security\FournisseurAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_home #route pour la deconnexion 

            remember_me:
                secret: '%kernel.secret%'

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
    
    
        # - { path: ^/profile, roles: ROLE_USER }
